<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oil.oil_test.dao.StoreOutMapper">
  <resultMap id="BaseResultMap" type="oil.oil_test.POJO.StoreOut">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="storeOutID" jdbcType="BIGINT" property="storeOutID" />
    <result column="userID" jdbcType="BIGINT" property="userID" />
    <result column="wareID" jdbcType="BIGINT" property="wareID" />
    <result column="storeOutCode" jdbcType="VARCHAR" property="storeOutCode" />
    <result column="storeOutType" jdbcType="BIT" property="storeOutType" />
    <result column="storeOutOil" jdbcType="VARCHAR" property="storeOutOil" />
    <result column="storeOutPerson" jdbcType="VARCHAR" property="storeOutPerson" />
    <result column="storeOutDate" jdbcType="DATE" property="storeOutDate" />
    <result column="storeOutState" jdbcType="INTEGER" property="storeOutState" />
    <result column="storeOutNote" jdbcType="VARCHAR" property="storeOutNote" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    storeOutID, userID, wareID, storeOutCode, storeOutType, storeOutOil, storeOutPerson, 
    storeOutDate, storeOutState, storeOutNote
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from storeout_table
    where storeOutID = #{storeOutID,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from storeout_table
    where storeOutID = #{storeOutID,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="oil.oil_test.POJO.StoreOut">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into storeout_table (storeOutID, userID, wareID, 
      storeOutCode, storeOutType, storeOutOil, 
      storeOutPerson, storeOutDate, storeOutState, 
      storeOutNote)
    values (#{storeOutID,jdbcType=BIGINT}, #{userID,jdbcType=BIGINT}, #{wareID,jdbcType=BIGINT}, 
      #{storeOutCode,jdbcType=VARCHAR}, #{storeOutType,jdbcType=BIT}, #{storeOutOil,jdbcType=VARCHAR}, 
      #{storeOutPerson,jdbcType=VARCHAR}, #{storeOutDate,jdbcType=DATE}, #{storeOutState,jdbcType=INTEGER}, 
      #{storeOutNote,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="oil.oil_test.POJO.StoreOut">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into storeout_table
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="storeOutID != null">
        storeOutID,
      </if>
      <if test="userID != null">
        userID,
      </if>
      <if test="wareID != null">
        wareID,
      </if>
      <if test="storeOutCode != null">
        storeOutCode,
      </if>
      <if test="storeOutType != null">
        storeOutType,
      </if>
      <if test="storeOutOil != null">
        storeOutOil,
      </if>
      <if test="storeOutPerson != null">
        storeOutPerson,
      </if>
      <if test="storeOutDate != null">
        storeOutDate,
      </if>
      <if test="storeOutState != null">
        storeOutState,
      </if>
      <if test="storeOutNote != null">
        storeOutNote,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="storeOutID != null">
        #{storeOutID,jdbcType=BIGINT},
      </if>
      <if test="userID != null">
        #{userID,jdbcType=BIGINT},
      </if>
      <if test="wareID != null">
        #{wareID,jdbcType=BIGINT},
      </if>
      <if test="storeOutCode != null">
        #{storeOutCode,jdbcType=VARCHAR},
      </if>
      <if test="storeOutType != null">
        #{storeOutType,jdbcType=BIT},
      </if>
      <if test="storeOutOil != null">
        #{storeOutOil,jdbcType=VARCHAR},
      </if>
      <if test="storeOutPerson != null">
        #{storeOutPerson,jdbcType=VARCHAR},
      </if>
      <if test="storeOutDate != null">
        #{storeOutDate,jdbcType=DATE},
      </if>
      <if test="storeOutState != null">
        #{storeOutState,jdbcType=INTEGER},
      </if>
      <if test="storeOutNote != null">
        #{storeOutNote,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="oil.oil_test.POJO.StoreOut">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update storeout_table
    <set>
      <if test="userID != null">
        userID = #{userID,jdbcType=BIGINT},
      </if>
      <if test="wareID != null">
        wareID = #{wareID,jdbcType=BIGINT},
      </if>
      <if test="storeOutCode != null">
        storeOutCode = #{storeOutCode,jdbcType=VARCHAR},
      </if>
      <if test="storeOutType != null">
        storeOutType = #{storeOutType,jdbcType=BIT},
      </if>
      <if test="storeOutOil != null">
        storeOutOil = #{storeOutOil,jdbcType=VARCHAR},
      </if>
      <if test="storeOutPerson != null">
        storeOutPerson = #{storeOutPerson,jdbcType=VARCHAR},
      </if>
      <if test="storeOutDate != null">
        storeOutDate = #{storeOutDate,jdbcType=DATE},
      </if>
      <if test="storeOutState != null">
        storeOutState = #{storeOutState,jdbcType=INTEGER},
      </if>
      <if test="storeOutNote != null">
        storeOutNote = #{storeOutNote,jdbcType=VARCHAR},
      </if>
    </set>
    where storeOutID = #{storeOutID,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="oil.oil_test.POJO.StoreOut">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update storeout_table
    set userID = #{userID,jdbcType=BIGINT},
      wareID = #{wareID,jdbcType=BIGINT},
      storeOutCode = #{storeOutCode,jdbcType=VARCHAR},
      storeOutType = #{storeOutType,jdbcType=BIT},
      storeOutOil = #{storeOutOil,jdbcType=VARCHAR},
      storeOutPerson = #{storeOutPerson,jdbcType=VARCHAR},
      storeOutDate = #{storeOutDate,jdbcType=DATE},
      storeOutState = #{storeOutState,jdbcType=INTEGER},
      storeOutNote = #{storeOutNote,jdbcType=VARCHAR}
    where storeOutID = #{storeOutID,jdbcType=BIGINT}
  </update>

  <!--根据油库ID查记录表-->
  <resultMap id="selectStoreOutAll" type="oil.oil_test.POJO.data.StoreOutAll">
    <id column="storeOutID" jdbcType="BIGINT" property="storeOutID" />
    <result column="userID" jdbcType="BIGINT" property="userID" />
    <result column="wareID" jdbcType="BIGINT" property="wareID" />
    <result column="storeOutCode" jdbcType="VARCHAR" property="storeOutCode" />
    <result column="storeOutType" jdbcType="BIT" property="storeOutType" />
    <result column="storeOutOil" jdbcType="VARCHAR" property="storeOutOil" />
    <result column="storeOutPerson" jdbcType="VARCHAR" property="storeOutPerson" />
    <result column="storeOutDate" jdbcType="DATE" property="storeOutDate" />
    <result column="storeOutState" jdbcType="INTEGER" property="storeOutState" />
    <result column="storeOutNote" jdbcType="VARCHAR" property="storeOutNote" />
    <association property="user" javaType="oil.oil_test.POJO.User">
      <id column="userID" jdbcType="BIGINT" property="userID" />
      <result column="userCode" jdbcType="VARCHAR" property="userCode" />
      <result column="userName" jdbcType="VARCHAR" property="userName" />
    </association>
    <association property="house" javaType="oil.oil_test.POJO.House">
      <id column="wareID" jdbcType="BIGINT" property="wareID" />
      <result column="ltName" jdbcType="VARCHAR" property="ltName" />
      <result column="jtName" jdbcType="VARCHAR" property="jtName" />
      <result column="zqName" jdbcType="VARCHAR" property="zqName" />
      <result column="wareCode" jdbcType="VARCHAR" property="wareCode" />
      <result column="wareName" jdbcType="VARCHAR" property="wareName" />
      <result column="wareTotal" jdbcType="FLOAT" property="wareTotal" />
    </association>
  </resultMap>

  <resultMap id="selectStoreOutTest" type="oil.oil_test.POJO.data.StoreOutAll">
    <id column="storeOutID" jdbcType="BIGINT" property="storeOutID" />
    <result column="userID" jdbcType="BIGINT" property="userID" />
    <result column="wareID" jdbcType="BIGINT" property="wareID" />
    <result column="storeOutCode" jdbcType="VARCHAR" property="storeOutCode" />
    <result column="storeOutType" jdbcType="BIT" property="storeOutType" />
    <result column="storeOutOil" jdbcType="VARCHAR" property="storeOutOil" />
    <result column="storeOutPerson" jdbcType="VARCHAR" property="storeOutPerson" />
    <result column="storeOutDate" jdbcType="DATE" property="storeOutDate" />
    <result column="storeOutState" jdbcType="INTEGER" property="storeOutState" />
    <result column="storeOutNote" jdbcType="VARCHAR" property="storeOutNote" />
    <association property="user" javaType="oil.oil_test.POJO.User">
      <id column="userID" jdbcType="BIGINT" property="userID" />
      <result column="userAccount" jdbcType="VARCHAR" property="userAccount" />
      <result column="userPassword" jdbcType="VARCHAR" property="userPassword" />
    </association>
    <association property="house" javaType="oil.oil_test.POJO.House">
      <id column="wareID" jdbcType="BIGINT" property="wareID" />
      <result column="wareTotal" jdbcType="FLOAT" property="wareTotal" />
      <result column="groupID" jdbcType="BIGINT" property="groupID" />
    </association>
  </resultMap>


  <select id="selectByWareIDIn" resultMap="selectStoreOutTest">
    select *
    from storeOut_table
           left join user_table on storeOut_table.userID = user_table.userID
           left join house_table on storeOut_table.wareID = house_table.wareID
    where storeOut_table.wareID = #{wareID} and storeOutType = 1 and storeOutState = #{state}
    order by storeOutDate  DESC
  </select>

  <select id="selectByWareIDInTest" resultMap="selectStoreOutAll">
    select  *
    from storeout_table st
        left join user_table ut on st.userID = ut.userID
        left join house_table ht on st.wareID = ht.wareID
    where st.wareID=#{wareID} and  storeOutType=1 and storeOutState=#{state}
    order by st.wareID Desc

  </select>



  <select id="selectByWareIDOut" resultMap="selectStoreOutAll">
    select *
    from storeOut_table
           left join user_table on storeOut_table.userID = user_table.userID
           left join house_table on storeOut_table.wareID = house_table.wareID
    where storeOut_table.wareID = #{wareID} and storeOutType = 0 and storeOutState = #{state}
    order by storeOutDate  DESC
  </select>
</mapper>