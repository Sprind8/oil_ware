<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="oil.oil_test.dao.UserMapper">
  <resultMap id="BaseResultMap" type="oil.oil_test.POJO.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="userID" jdbcType="BIGINT" property="userID" />
    <result column="groupID" jdbcType="BIGINT" property="groupID" />
    <result column="userAcount" jdbcType="VARCHAR" property="userAcount" />
    <result column="userPassword" jdbcType="VARCHAR" property="userPassword" />
    <result column="userCode" jdbcType="VARCHAR" property="userCode" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="userLT" jdbcType="VARCHAR" property="userLT" />
    <result column="userJT" jdbcType="VARCHAR" property="userJT" />
    <result column="userZQ" jdbcType="VARCHAR" property="userZQ" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    userID, groupID, userAcount, userPassword, userCode, userName, userLT, userJT, userZQ
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from user_table
    where userID = #{userID,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_table
    where userID = #{userID,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="oil.oil_test.POJO.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_table (userID, groupID, userAcount, 
      userPassword, userCode, userName, 
      userLT, userJT, userZQ
      )
    values (#{userID,jdbcType=BIGINT}, #{groupID,jdbcType=BIGINT}, #{userAcount,jdbcType=VARCHAR}, 
      #{userPassword,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userLT,jdbcType=VARCHAR}, #{userJT,jdbcType=VARCHAR}, #{userZQ,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="oil.oil_test.POJO.User" useGeneratedKeys="true" keyProperty="userID">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_table
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userID != null">
        userID,
      </if>
      <if test="groupID != null">
        groupID,
      </if>
      <if test="userAcount != null">
        userAcount,
      </if>
      <if test="userPassword != null">
        userPassword,
      </if>
      <if test="userCode != null">
        userCode,
      </if>
      <if test="userName != null">
        userName,
      </if>
      <if test="userLT != null">
        userLT,
      </if>
      <if test="userJT != null">
        userJT,
      </if>
      <if test="userZQ != null">
        userZQ,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userID != null">
        #{userID,jdbcType=BIGINT},
      </if>
      <if test="groupID != null">
        #{groupID,jdbcType=BIGINT},
      </if>
      <if test="userAcount != null">
        #{userAcount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userLT != null">
        #{userLT,jdbcType=VARCHAR},
      </if>
      <if test="userJT != null">
        #{userJT,jdbcType=VARCHAR},
      </if>
      <if test="userZQ != null">
        #{userZQ,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="oil.oil_test.POJO.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_table
    <set>
      <if test="groupID != null">
        groupID = #{groupID,jdbcType=BIGINT},
      </if>
      <if test="userAcount != null">
        userAcount = #{userAcount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        userPassword = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        userCode = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userLT != null">
        userLT = #{userLT,jdbcType=VARCHAR},
      </if>
      <if test="userJT != null">
        userJT = #{userJT,jdbcType=VARCHAR},
      </if>
      <if test="userZQ != null">
        userZQ = #{userZQ,jdbcType=VARCHAR},
      </if>
    </set>
    where userID = #{userID,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="oil.oil_test.POJO.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_table
    set groupID = #{groupID,jdbcType=BIGINT},
      userAcount = #{userAcount,jdbcType=VARCHAR},
      userPassword = #{userPassword,jdbcType=VARCHAR},
      userCode = #{userCode,jdbcType=VARCHAR},
      userName = #{userName,jdbcType=VARCHAR},
      userLT = #{userLT,jdbcType=VARCHAR},
      userJT = #{userJT,jdbcType=VARCHAR},
      userZQ = #{userZQ,jdbcType=VARCHAR}
    where userID = #{userID,jdbcType=BIGINT}
  </update>

  <!--查询用户信息和用户的组织机构信息-->
  <resultMap id="selectUserAndGroup" type="oil.oil_test.POJO.data.UserAll">
    <id column="userID" jdbcType="BIGINT" property="userID" />
    <result column="groupID" jdbcType="BIGINT" property="groupID" />
    <result column="userAcount" jdbcType="VARCHAR" property="userAcount" />
    <result column="userPassword" jdbcType="VARCHAR" property="userPassword" />
    <result column="userCode" jdbcType="VARCHAR" property="userCode" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="userLT" jdbcType="VARCHAR" property="userLT" />
    <result column="userJT" jdbcType="VARCHAR" property="userJT" />
    <result column="userZQ" jdbcType="VARCHAR" property="userZQ" />
    <association property="group" javaType="oil.oil_test.POJO.Group">
      <id column="groupID" jdbcType="BIGINT" property="groupID" />
      <result column="groupCode" jdbcType="VARCHAR" property="groupCode" />
      <result column="groupName" jdbcType="VARCHAR" property="groupName" />
      <result column="groupNature" jdbcType="INTEGER" property="groupNature" />
    </association>
  </resultMap>

  <!--用户登录 返回用户和组织信息-->
  <select id="userLogin" resultMap="selectUserAndGroup">
    select userID,user_table.groupID,userAcount,userCode,userName,userLT,userJT,userZQ,groupCode,groupName,groupNature
    from  user_table
    left join group_table on user_table.groupID = group_table.groupID
    where
      userAcount = #{userAcount,jdbcType=VARCHAR}
      and
      userPassword = #{userPassword,jdbcType=VARCHAR}
  </select>


  <!--用户信息显示-->
  <select id="selectByGroupID"   parameterType="Long"   resultMap="selectUserAndGroup">
    select *
    from  user_table
    left join group_table on user_table.groupID = group_table.groupID
    where user_table.groupID = #{groupID,jdbcType=BIGINT}
  </select>

  <!--搜索框：条件遍历信息-->
  <select id="selectByGroupName" parameterType="String" resultMap="selectUserAndGroup">
    select *
    from  user_table
    left join group_table on user_table.groupID = group_table.groupID
    where
    <choose>
      <when test="ltName != null and ltName != '' " >
        userLT = #{ltName}
      </when>
      <when test="jtName != null and jtName != '' " >
        userJT = #{jtName}
      </when>
      <when test="zqName != null and zqName != ''" >
        userZQ = #{zqName}
      </when>
      <otherwise>
        userID = 0
      </otherwise>
    </choose>
  </select>


</mapper>